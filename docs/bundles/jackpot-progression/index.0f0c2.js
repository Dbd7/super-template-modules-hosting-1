window.__require=function t(o,e,a){function n(i,s){if(!e[i]){if(!o[i]){var l=i.split("/"),c=l,p=i;if(c=c[c.length-1],l.length>1&&(window.cachePath[c]=i),!o[c]){var d="function"==typeof __require&&__require;if(!s&&d)return d(c,!0);if(r)return r(c,!0);if("object"==typeof __quick_compile_project__&&__quick_compile_project__){var u=window.cachePath[c];u&&(p=u);for(var h=p.split("/"),g="",m=h.length;m>0;)h[m]&&".."!=h[m]&&(g="/"+h[m]+g),m--;return c="./assets"+g,__quick_compile_project__.require(c,"preview-scripts/__qc_index__.js")}throw new Error("Cannot find module '"+i+"'")}i=c}var f=e[i]={exports:{}};o[i][0].call(f.exports,function(t){return n(o[i][1][t]||t)},f,f.exports,t,o,e,a)}return e[i].exports}window.cachePath={};for(var r="function"==typeof __require&&__require,i=0;i<a.length;i++)n(a[i]);return n}({JackpotProgressionModule:[function(t,o,e){"use strict";cc._RF.push(o,"4f492dHao9PPaYq7b5/O3hV","JackpotProgressionModule");var a=this&&this.__createBinding||(Object.create?function(t,o,e,a){void 0===a&&(a=e),Object.defineProperty(t,a,{enumerable:!0,get:function(){return o[e]}})}:function(t,o,e,a){void 0===a&&(a=e),t[a]=o[e]}),n=this&&this.__setModuleDefault||(Object.create?function(t,o){Object.defineProperty(t,"default",{enumerable:!0,value:o})}:function(t,o){t.default=o}),r=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var o={};if(null!=t)for(var e in t)"default"!==e&&Object.prototype.hasOwnProperty.call(t,e)&&a(o,t,e);return n(o,t),o};Object.defineProperty(e,"__esModule",{value:!0}),e.JackpotType=void 0;const i=t("../../../../scripts/GlobalData"),s=t("../../../../scripts/HelperTools"),l=r(t("../../../../scripts/manager/CreditCoinConvertorManager"));var c;(function(t){t[t.Minor=1]="Minor",t[t.Random=2]="Random",t[t.Major=3]="Major"})(c=e.JackpotType||(e.JackpotType={}));class p extends cc.Component{static getPoolMajor(){const t=this.pool.major;return this.hasConsole&&(console.log("Get Pool Major------------------------------------------"),console.log(this.pool.major),console.log(l.default.getInstance().convertor(this.pool.major.toString(),l.CCConvertionType.Credit)),console.log(t)),t}static getPoolMinor(){const t=this.pool.minor;return this.hasConsole&&(console.log("Get Pool Minor------------------------------------------"),console.log(this.pool.minor),console.log(l.default.getInstance().convertor(this.pool.minor.toString(),l.CCConvertionType.Credit)),console.log(t)),t}static getStartingJackpotAmount(t){let o=0;switch(t){case c.Major:o=.7*this.pool.major,this.major=o;break;case c.Random:o=this.pool.random,this.random=o;break;case c.Minor:o=.7*this.pool.minor,this.minor=o}return o}static getJackpotAmount(t){let o=0;switch(t){case c.Major:o=this.major+s.GetRandomFloat(.1,.9),this.major=o;break;case c.Random:const e=this.pool.random-1e4;o=s.GetRandomFloat(e<0?0:e,this.pool.random+1e4),this.random=o;break;case c.Minor:o=this.minor+s.GetRandomFloat(.1,.9),this.minor=o}return o}static init(){var t;const o=null===(t=i.GlobalData.data.startupData.res)||void 0===t?void 0:t.result.sgsetting.sgcode,e=i.GlobalData.data.jackpotBalance;if(null==e||null==e||0==Object.keys(e).length)this.fakeData=!0;else{const t=e.records;for(let e=0,a=t.length;e<a;e++){const a=t[e].group;for(let t=0,e=a.length;t<e;t++){const e=a[t].gameCodeList;for(let n=0,r=e.length;n<r;n++)if(o==e[n]){this.fakeData=!1;const o=a[t].pool;for(let t=0,e=o.length;t<e;t++){const e=o[t].subCategory,a=o[t].amount;"MINOR"==e?this.pool.minor=a:"RANDOM"==e?this.pool.random=a:"MAJOR"==e&&(this.pool.major=a)}}}}}this.fakeData&&(this.hasConsole&&console.error("This Is Fake Data ! ! !"),this.pool.random=s.GetRandomFloat(23e4,11e5),this.pool.major=s.GetRandomFloat(2e4,25e4),this.pool.minor=s.GetRandomFloat(5e3,6e4)),this.hasConsole&&(console.log("Is Fake Data: ",this.fakeData),console.log(e),console.log(this.pool))}}e.default=p,p.pool={minor:0,random:0,major:0},p.random=0,p.major=0,p.minor=0,p.hasConsole=!1,p.fakeData=!0,cc._RF.pop()},{"../../../../scripts/GlobalData":void 0,"../../../../scripts/HelperTools":void 0,"../../../../scripts/manager/CreditCoinConvertorManager":void 0}],JackpotProgressionPrefab:[function(t,o,e){"use strict";cc._RF.push(o,"95eb3UjvhxOK6aWPbgYxaxV","JackpotProgressionPrefab");var a=this&&this.__createBinding||(Object.create?function(t,o,e,a){void 0===a&&(a=e),Object.defineProperty(t,a,{enumerable:!0,get:function(){return o[e]}})}:function(t,o,e,a){void 0===a&&(a=e),t[a]=o[e]}),n=this&&this.__setModuleDefault||(Object.create?function(t,o){Object.defineProperty(t,"default",{enumerable:!0,value:o})}:function(t,o){t.default=o}),r=this&&this.__decorate||function(t,o,e,a){var n,r=arguments.length,i=r<3?o:null===a?a=Object.getOwnPropertyDescriptor(o,e):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,o,e,a);else for(var s=t.length-1;s>=0;s--)(n=t[s])&&(i=(r<3?n(i):r>3?n(o,e,i):n(o,e))||i);return r>3&&i&&Object.defineProperty(o,e,i),i},i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var o={};if(null!=t)for(var e in t)"default"!==e&&Object.prototype.hasOwnProperty.call(t,e)&&a(o,t,e);return n(o,t),o},s=this&&this.__awaiter||function(t,o,e,a){return new(e||(e=Promise))(function(n,r){function i(t){try{l(a.next(t))}catch(o){r(o)}}function s(t){try{l(a.throw(t))}catch(o){r(o)}}function l(t){var o;t.done?n(t.value):(o=t.value,o instanceof e?o:new e(function(t){t(o)})).then(i,s)}l((a=a.apply(t,o||[])).next())})},l=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const c=l(t("../../../../game-bundle/scripts/components/running-number-label/RunningNumberLabel")),p=t("../../../../scripts/framework/gg"),d=t("../../../../scripts/framework/lib/router/PanelComponent"),u=t("../../../../scripts/HelperTools"),h=l(t("../../../../scripts/manager/AudioManager")),g=i(t("../../../../scripts/manager/CreditCoinConvertorManager")),m=l(t("../../../../scripts/manager/GameSystemManager")),f=l(t("../../../../scripts/server/GameServer")),k=i(t("./JackpotProgressionModule")),{ccclass:b,property:M}=cc._decorator;let J=class extends d.PanelComponent{constructor(){super(...arguments),this.jackpotBg=null,this.labelMajor=null,this.labelRandom=null,this.labelMinor=null,this.wonAmountObj={},this.hasConsole=!1,this.triggerJackpotWin=!1}onLoad(){this.labelMajor.string="0",this.labelRandom.string="0",this.labelMinor.string="0",k.default.hasConsole=this.hasConsole,this.registerEvent(),this.registerCallback(),this.addLabelForCreditCoinUpdate()}start(){return s(this,void 0,void 0,function*(){yield this.loadJackpotAssets(),this.setupJackpotModule()})}show(t){t.onShowed()}hide(t){t.onHided()}registerEvent(){p.gg.eventManager.on("JackporPanelEvent.UpdateJackpotProgression",this.onCountingBalance,this),p.gg.eventManager.on("JackporPanelEvent.ResetJackpotProgression",this.resetJackpotWonCounter,this)}registerCallback(){this.labelMinor.node.getComponent(c.default).registerOnCompleteRunningEventCallback(()=>{k.default.fakeData||this.triggerJackpotWin||this.updateJackpotBalance(k.JackpotType.Minor)}),this.labelMajor.node.getComponent(c.default).registerOnCompleteRunningEventCallback(()=>{k.default.fakeData||this.triggerJackpotWin||this.updateJackpotBalance(k.JackpotType.Major)})}setupJackpotModule(){return s(this,void 0,void 0,function*(){k.default.init(),this.updateStartingJackpot(),k.default.fakeData?(this.registerMajorJackpotSchedule(),this.registerRandomJackpotSchedule(),this.registerMinorJackpotSchedule()):(this.updateRandomJackpot(),this.registerRandomJackpotSchedule(),this.updateMinorJackpot(),this.updateMajorJackpot())})}updateStartingJackpot(){const t=k.default.getStartingJackpotAmount(k.JackpotType.Minor);this.labelMinor.string=t.toFixed(2);const o=k.default.getStartingJackpotAmount(k.JackpotType.Major);this.labelMajor.string=o.toFixed(2);const e=k.default.getStartingJackpotAmount(k.JackpotType.Random);this.labelRandom.string=e.toFixed(2),this.hasConsole&&(console.log("Setup Starting Jackpot Progression Value-------------------------------------------"),console.log("Random: ",e,"Label: ",this.labelRandom.string),console.log("Major: ",o,"Label: ",this.labelMajor.string),console.log("Minor: ",t,"Label: ",this.labelMinor.string))}updateJackpotBalance(t){return s(this,void 0,void 0,function*(){yield f.default.getInstance().getJackpotBalance(),k.default.init(),this.updateAfterJackpot(t),this.hasConsole&&(console.log("Update Again Jackpot Progression"),console.log("Type:",t)),t==k.JackpotType.Minor?this.updateMinorJackpot():t==k.JackpotType.Major?this.updateMajorJackpot():t==k.JackpotType.Random&&(this.updateRandomJackpot(),this.registerRandomJackpotSchedule())})}updateAfterJackpot(t){if(this.hasConsole&&console.log("Setup Starting Jackpot Progression Value-------------------------------------------"),t==k.JackpotType.Minor){const t=k.default.getStartingJackpotAmount(k.JackpotType.Minor);this.labelMinor.string=t.toFixed(2),this.hasConsole&&console.log("Minor: ",t,"Label: ",this.labelMinor.string)}else if(t==k.JackpotType.Major){const t=k.default.getStartingJackpotAmount(k.JackpotType.Major);this.labelMajor.string=t.toFixed(2),this.hasConsole&&console.log("Major: ",t,"Label: ",this.labelMajor.string)}else if(t==k.JackpotType.Random){const t=k.default.getStartingJackpotAmount(k.JackpotType.Random);this.labelRandom.string=t.toFixed(2),this.hasConsole&&console.log("Random: ",t,"Label: ",this.labelRandom.string)}}updateRandomJackpot(){const t=k.default.getJackpotAmount(k.JackpotType.Random);this.labelRandom.node.getComponent(c.default).immediatelyToFinalValue(t)}updateMinorJackpot(){if(k.default.fakeData){const t=k.default.getJackpotAmount(k.JackpotType.Minor);this.labelMinor.string=g.CCConvertor(t.toFixed(2))}else{const t=k.default.minor;k.default.minor+=5,this.hasConsole&&(console.log("Update Minor Jackpot-----------------------------------"),console.log("Compare Start - Final",t)),this.labelMinor.node.getComponent(c.default).updateCurrentValueWithStartValue(t,t+5,30,!1)}}updateMajorJackpot(){if(k.default.fakeData){const t=k.default.getJackpotAmount(k.JackpotType.Major);this.labelMajor.string=g.CCConvertor(t.toFixed(2))}else{const t=k.default.major;k.default.major+=5,this.hasConsole&&(console.log("Update Major Jackpot-----------------------------------"),console.log("Compare Start - Final",t)),this.labelMajor.node.getComponent(c.default).updateCurrentValueWithStartValue(t,t+5,30,!1)}}registerMajorJackpotSchedule(){this.schedule(this.updateMajorJackpot,1,1/0,0)}registerRandomJackpotSchedule(){this.schedule(this.updateRandomJackpot,3,1/0,0)}registerMinorJackpotSchedule(){this.schedule(this.updateMinorJackpot,1,1/0,0)}addLabelForCreditCoinUpdate(){g.default.getInstance().addLabelSprite(this.labelMajor),g.default.getInstance().addLabelSprite(this.labelMinor),g.default.getInstance().addLabelSprite(this.labelRandom)}onCountingBalance(t){return s(this,void 0,void 0,function*(){switch(this.hasConsole&&console.warn("Jackpot Won Popup -> Progression Reducer"),this.triggerJackpotWin=!0,this.wonAmountObj={amount:Number(t.jackpotWonAmount)},t.type){case k.JackpotType.Major:this.unschedule(this.updateMajorJackpot),this.labelMajor.node.getComponent(c.default).immediatelyToFinalValue(),this.labelMajor.node.color=cc.Color.RED,this.labelMajor.string=t.jackpotWonAmount,this.jackpotWonAmountReducer(this.labelMajor,this.wonAmountObj,t.maxJackpotAnimTime);break;case k.JackpotType.Random:this.unschedule(this.updateRandomJackpot),this.labelRandom.node.getComponent(c.default).immediatelyToFinalValue(),this.labelRandom.node.color=cc.Color.RED,this.labelRandom.string=t.jackpotWonAmount,this.jackpotWonAmountReducer(this.labelRandom,this.wonAmountObj,t.maxJackpotAnimTime);break;case k.JackpotType.Minor:this.unschedule(this.updateMinorJackpot),this.labelMinor.node.getComponent(c.default).immediatelyToFinalValue(),this.labelMinor.node.color=cc.Color.RED,this.labelMinor.string=t.jackpotWonAmount,this.jackpotWonAmountReducer(this.labelMinor,this.wonAmountObj,t.maxJackpotAnimTime),this.labelMinor.node.color=cc.Color.RED}})}jackpotWonAmountReducer(t,o,e){let a=0;const n=g.default.getInstance().getConvertionType()===g.CCConvertionType.Coin?0:2;g.default.getInstance().enable=!1,h.default.getInstance().play("Sfx_CoinLoop",!0),cc.tween(o).to(e,{amount:0},{progress:(o,e,r,i)=>(a=cc.misc.lerp(o,e,i),t.string=a.toFixed(n),a)}).call(()=>{t.string="0",g.default.getInstance().enable=!0,h.default.getInstance().stop("Sfx_CoinLoop")}).start()}resetJackpotWonCounter(t){switch(cc.Tween.stopAllByTarget(this.wonAmountObj),this.triggerJackpotWin=!1,t){case k.JackpotType.Major:this.labelMajor.node.color=cc.Color.WHITE,this.updateJackpotBalance(k.JackpotType.Minor);break;case k.JackpotType.Random:this.labelRandom.node.color=cc.Color.WHITE,this.updateJackpotBalance(k.JackpotType.Random);break;case k.JackpotType.Minor:this.labelMinor.node.color=cc.Color.WHITE,this.updateJackpotBalance(k.JackpotType.Major)}}loadJackpotAssets(){return new Promise(t=>{cc.assetManager.loadBundle("jackpot-progression",(o,e)=>{if(o)return console.error(o);const a=`textures/${m.default.getInstance().getLanguageCode()}`,n=u.AsyncTask(t=>s(this,void 0,void 0,function*(){e.load(`${a}/Jackpot`,cc.SpriteFrame,(o,e)=>{this.jackpotBg.spriteFrame=e,t()})}));Promise.all([n]).then(()=>{t()})})})}};r([M(cc.Sprite)],J.prototype,"jackpotBg",void 0),r([M(cc.Label)],J.prototype,"labelMajor",void 0),r([M(cc.Label)],J.prototype,"labelRandom",void 0),r([M(cc.Label)],J.prototype,"labelMinor",void 0),J=r([b],J),e.default=J,cc._RF.pop()},{"../../../../game-bundle/scripts/components/running-number-label/RunningNumberLabel":void 0,"../../../../scripts/HelperTools":void 0,"../../../../scripts/framework/gg":void 0,"../../../../scripts/framework/lib/router/PanelComponent":void 0,"../../../../scripts/manager/AudioManager":void 0,"../../../../scripts/manager/CreditCoinConvertorManager":void 0,"../../../../scripts/manager/GameSystemManager":void 0,"../../../../scripts/server/GameServer":void 0,"./JackpotProgressionModule":"JackpotProgressionModule"}]},{},["JackpotProgressionModule","JackpotProgressionPrefab"]);